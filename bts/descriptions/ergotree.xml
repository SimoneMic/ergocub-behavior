<?xml version="1.0"?>
<root main_tree_to_execute="BehaviorTree">
    <!-- ////////// -->
    <BehaviorTree ID="BehaviorTree">
        <ReactiveSequence>
            <Condition ID="IsDoingAction" is_doing_action="{the_is_doing_action}"/>
            <ReactiveFallback>
                <BlackboardCheckString return_on_mismatch="FAILURE" value_A="{the_has_box}" value_B="no">
                    <Condition ID="BoxDetected" poi="{the_poi}" poi_pos="{the_poi_pos}"/>
                </BlackboardCheckString>
                <Condition ID="FaceDetected" poi="{the_poi}" poi_pos="{the_poi_pos}"/>
                <AlwaysSuccess/>
            </ReactiveFallback>
            <Action ID="RobotLookAtPOI" poi="{the_poi}" poi_pos="{the_poi_pos}"/>
            <Action ID="RobotChangeFace" has_box="{the_has_box}" poi="{the_poi}"/>
            <ReactiveFallback>
                <ReactiveSequence>
                    <BlackboardCheckString return_on_mismatch="FAILURE" value_A="{the_poi}" value_B="object">
                        <Condition ID="ObjectIsGraspable" poi_pos="{the_poi_pos}"/>
                    </BlackboardCheckString>
                    <BlackboardCheckString return_on_mismatch="FAILURE" value_A="{the_has_box}" value_B="no">
                        <Action ID="GoReady"/>
                    </BlackboardCheckString>
                    <Action ID="GoGrasp" has_box="{the_has_box}"/>
                </ReactiveSequence>
                <ReactiveSequence>
                    <BlackboardCheckString return_on_mismatch="FAILURE" value_A="{the_poi}" value_B="face">
                        <Condition ID="FocusDetected"/>
                    </BlackboardCheckString>
                    <Condition ID="ActionDetected" action="{the_action}"/>
                    <ReactiveFallback>
                        <BlackboardCheckString return_on_mismatch="FAILURE" value_A="{the_has_box}" value_B="yes">
                            <ReactiveFallback>
                                <BlackboardCheckString return_on_mismatch="FAILURE" value_A="{the_action}" value_B="release">
                                    <Action ID="GoRelease" has_box="{the_has_box}"/>
                                </BlackboardCheckString>
                                <Action ID="MoveBox" action="{the_action}"/>
                            </ReactiveFallback>
                        </BlackboardCheckString>
                        <BlackboardCheckString return_on_mismatch="FAILURE" value_A="{the_has_box}" value_B="no">
                            <BlackboardCheckString return_on_mismatch="FAILURE" value_A="{the_is_doing_action}" value_B="no">
                                <Action ID="DoResponseAction" action="{the_action}"/>
                            </BlackboardCheckString>
                        </BlackboardCheckString>
                    </ReactiveFallback>
                </ReactiveSequence>
                <BlackboardCheckString return_on_mismatch="FAILURE" value_A="{the_has_box}" value_B="no">
                    <BlackboardCheckString return_on_mismatch="FAILURE" value_A="{the_is_doing_action}" value_B="no">
                        <Action ID="GoHome"/>
                    </BlackboardCheckString>
                </BlackboardCheckString>
            </ReactiveFallback>
        </ReactiveSequence>
    </BehaviorTree>
    <!-- ////////// -->
    <TreeNodesModel>
        <Condition ID="ActionDetected">
            <output_port name="action" type="std::string"/>
        </Condition>
        <Condition ID="BoxDetected">
            <output_port name="poi" type="std::string"/>
            <output_port name="poi_pos" type="std::vector&lt;double, std::allocator&lt;double&gt; &gt;"/>
        </Condition>
        <Action ID="DoResponseAction">
            <input_port name="action" type="std::string"/>
        </Action>
        <Condition ID="FaceDetected">
            <output_port name="poi" type="std::string"/>
            <output_port name="poi_pos" type="std::vector&lt;double, std::allocator&lt;double&gt; &gt;"/>
        </Condition>
        <Condition ID="FocusDetected"/>
        <Action ID="GoGrasp">
            <output_port name="has_box" type="std::string"/>
        </Action>
        <Action ID="GoHome"/>
        <Action ID="GoReady"/>
        <Action ID="GoRelease">
            <output_port name="has_box" type="std::string"/>
        </Action>
        <Condition ID="IsDoingAction">
            <output_port name="is_doing_action"/>
        </Condition>
        <Action ID="MoveBox">
            <input_port name="action"/>
        </Action>
        <Condition ID="ObjectIsGraspable">
            <input_port name="poi_pos"/>
        </Condition>
        <Action ID="RobotChangeFace">
            <input_port name="has_box"/>
            <input_port name="poi"/>
        </Action>
        <Action ID="RobotLookAtPOI">
            <input_port name="poi"/>
            <input_port name="poi_pos"/>
        </Action>
    </TreeNodesModel>
    <!-- ////////// -->
</root>
